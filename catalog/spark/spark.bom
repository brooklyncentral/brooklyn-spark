brooklyn.catalog:
  version: 0.2.1-SNAPSHOT
  iconUrl: https://upload.wikimedia.org/wikipedia/commons/e/ea/Spark-logo-192x100px.png
  publish:
    description: Entities to deploy and manage Apache Spark nodes and clusters using Apache Brooklyn
    license_code: Apache-2.0
    defaults:
      sparkIconUrl: &sparkIconUrl "https://upload.wikimedia.org/wikipedia/commons/e/ea/Spark-logo-192x100px.png"
    overview: README.md
    reference: catalog/reference.json
  items:
  - id: spark-base-software-process
    name: "Spark Base Software Process"
    description: |
      A base entity for reuse in other components.
    itemType: entity
    item:
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
      brooklyn.config:
        dontRequireTtyForSudo: true
        provisioning.properties:
          osFamily: centos
          osVersionRegex: 7
  - id: spark-node
    description: A standalone Apache Spark node, master unless given a spark.master.url
    item:
      type: spark-base-software-process
      name: Apache Spark Standalone Node
      brooklyn.parameters:
      - &sparkDownloadUrl
        name: spark.download.url
        label: "Spark Download URL"
        description: |
          Spark Download URL
        type: string
        default: "http://d3kbcqa49mib13.cloudfront.net/spark-2.1.0-bin-hadoop2.7.tgz"

      install.command: |
        # get java
        sudo yum update -y
        sudo yum install -y java-1.8.0-openjdk

        # turn off the firewall
        sudo systemctl stop firewalld || true
        sudo systemctl disable firewalld || true

        # if hostname is bogus then point it at localhost
        ping -c 1 `hostname` || echo ${OWN_IP} `hostname` | sudo tee -a /etc/hosts

        # get spark
        curl -o spark.tgz ${SPARK_DOWNLOAD_URL}

      customize.command: |
        tar xvzf ${INSTALL_DIR}/spark.tgz

      # SPARK_PUBLIC_DNS is set to fix the links in the ui, as per
      # https://www.datastax.com/dev/blog/common-spark-troubleshooting
      launch.command: |
        cd spark-*
        export SPARK_PUBLIC_DNS=${PUBLIC_IP}
        export SPARK_MASTER_IP=${OWN_IP}
        export SPARK_MASTER_PORT=${LOCAL_SPARK_PORT}
        export SPARK_WORKER_PORT=${LOCAL_SPARK_PORT}
        export SPARK_MASTER_WEBUI_PORT=${SPARK_WEBUI_PORT}
        export SPARK_WORKER_WEBUI_PORT=${SPARK_WEBUI_PORT}
        [ -z "$SPARK_MASTER_URL" ] && sbin/start-master.sh || sbin/start-slave.sh ${SPARK_MASTER_URL}

      checkRunning.command: |
        ps aux | grep java | grep org.apache.spark

      stop.command: |
        kill $(ps aux | grep java | grep org.apache.spark | awk '{print $2}')

      shell.env:
        SPARK_MASTER_URL: $brooklyn:config("spark.master.url")
        LOCAL_SPARK_PORT: $brooklyn:config("spark.port")
        LOCAL_SPARK_REST_PORT: $brooklyn:config("spark.port")
        SPARK_WEBUI_PORT: $brooklyn:config("spark.webui.port")
        SPARK_DOWNLOAD_URL: $brooklyn:config("spark.download.url")
        OWN_IP: $brooklyn:attributeWhenReady("host.subnet.address")
        PUBLIC_IP: $brooklyn:attributeWhenReady("host.address")

      brooklyn.config:
        spark.port: 7077
        spark.rest.port: 6066
        spark.webui.port: 8080
        children.startable.mode: background_late

      provisioning.properties:
        minRam: 8gb
        minCores: 4
        minDisk: 100gb
        osFamily: centos
        osVersionRegex: 7
        customizers:
        - $brooklyn:object:
            type: org.apache.brooklyn.location.jclouds.networking.SharedLocationSecurityGroupCustomizer
            object.fields:
              tcpPortRanges: ["22","4040-4050","8080", "6066"]

      brooklyn.initializers:
      - type: org.apache.brooklyn.core.effector.AddChildrenEffector
        brooklyn.config:
          name: SubmitSparkApp
          description: Start Spark App
          blueprint_type: spark-application
          parameters:
            spark.app.class:
              description: The app class
              defaultValue: "org.apache.spark.examples.SparkPi"
            spark.app.jar:
              description: The application jar
              defaultValue: "http://dl.bintray.com/typesafe/maven-releases/org/apache/spark/spark-examples_2.11/1.6.0-typesafe-001/spark-examples_2.11-1.6.0-typesafe-001.jar"

      brooklyn.enrichers:
      # publish URLs when service is up
      # `spark.url` for public access, `spark.subnet.url` for internal access
      - type: brooklyn.enricher.basic.Transformer
        brooklyn.config:
          enricher.sourceSensor: $brooklyn:sensor("service.isUp")
          enricher.targetSensor: $brooklyn:sensor("spark.url")
          enricher.targetValue: |
            $brooklyn:formatString("spark://%s:%s",
              $brooklyn:attributeWhenReady("host.address"), $brooklyn:config("spark.port"))
      - type: brooklyn.enricher.basic.Transformer
        brooklyn.config:
          enricher.sourceSensor: $brooklyn:sensor("service.isUp")
          enricher.targetSensor: $brooklyn:sensor("spark.rest.url")
          enricher.targetValue: |
            $brooklyn:formatString("http://%s:%s",
              $brooklyn:attributeWhenReady("host.address"), $brooklyn:config("spark.rest.port"))
      - type: brooklyn.enricher.basic.Transformer
        brooklyn.config:
          enricher.sourceSensor: $brooklyn:sensor("service.isUp")
          enricher.targetSensor: $brooklyn:sensor("spark.cluster.url")
          enricher.targetValue: |
            $brooklyn:formatString("spark://%s:%s",
              $brooklyn:attributeWhenReady("host.address"), $brooklyn:config("spark.rest.port"))

      - type: brooklyn.enricher.basic.Transformer
        brooklyn.config:
          enricher.sourceSensor: $brooklyn:sensor("service.isUp")
          enricher.targetSensor: $brooklyn:sensor("spark.subnet.url")
          enricher.targetValue:
            $brooklyn:formatString("spark://%s:%s",
              $brooklyn:attributeWhenReady("host.subnet.address"), $brooklyn:config("spark.port"))
      - type: brooklyn.enricher.basic.Transformer
        brooklyn.config:
          enricher.sourceSensor: $brooklyn:sensor("service.isUp")
          enricher.targetSensor: $brooklyn:sensor("main.uri")
          enricher.targetValue:
            $brooklyn:formatString("http://%s:%s/",
              $brooklyn:attributeWhenReady("host.address"), $brooklyn:config("spark.webui.port"))

  - id: spark-cluster-entity
    description: An Apache Spark cluster
    item:
      type: org.apache.brooklyn.entity.group.DynamicCluster
      name: Spark Cluster
      id: spark-cluster

      firstMemberSpec:
        $brooklyn:entitySpec:
          type: spark-node
          name: Spark Master
          id: spark-master
          brooklyn.config:
            spark.master.rest.url: $brooklyn:entity("spark-master").attributeWhenReady("spark.rest.url")
            spark.master.cluster.url: $brooklyn:entity("spark-master").attributeWhenReady("spark.cluster.url")

      memberSpec:
        $brooklyn:entitySpec:
          type: spark-node
          name: Spark Worker
          id: spark-worker
          brooklyn.config:
            spark.master.url: $brooklyn:entity("spark-master").attributeWhenReady("spark.url")
            spark.master.rest.url: $brooklyn:entity("spark-master").attributeWhenReady("spark.rest.url")
            spark.master.cluster.url: $brooklyn:entity("spark-master").attributeWhenReady("spark.cluster.url")

  - id: spark-application
    description: An Apache Spark Application
    item:
      type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
      name: Spark Application
      id: spark-application
      brooklyn.parameters:
        - name: spark.app.class
          label: "Spark App Class"
          description: |
            Spark App Class
          type: string
          default: "org.apache.spark.examples.SparkPi"
        - name: spark.app.jar
          label: "Spark App Jar"
          description: |
            Spark App Jar
          type: string
          default: "http://dl.bintray.com/typesafe/maven-releases/org/apache/spark/spark-examples_2.11/1.6.0-typesafe-001/spark-examples_2.11-1.6.0-typesafe-001.jar"

      brooklyn.initializers:
        - type: org.apache.brooklyn.core.sensor.ssh.SshCommandSensor
          brooklyn.config:
            name: spark.app.submission.id
            period: 1s
            command: |
              if [ -f ${RUN_DIR}/submissionId ]
              then
                  cat ${RUN_DIR}/submissionId
              fi

        - type: org.apache.brooklyn.core.sensor.http.HttpRequestSensor
          brooklyn.config:
            name: spark.app.status
            period: 1s
            jsonPath: driverState
            uri:
              '$brooklyn:formatString':
                - '%s/v1/submissions/status/%s'
                - $brooklyn:config("spark.master.rest.url")
                - $brooklyn:attributeWhenReady("spark.app.submission.id")

      brooklyn.config:

        shell.env:
          SPARK_CLUSTER_URL: $brooklyn:config("spark.master.cluster.url")
          PARENT_RUN_DIR: $brooklyn:component("parent", "ignored").attributeWhenReady("run.dir")
          SPARK_APP_CLASS: $brooklyn:config("spark.app.class")
          SPARK_APP_JAR: $brooklyn:config("spark.app.jar")
          RUN_DIR: $brooklyn:attributeWhenReady("run.dir")

        launch.command: |
          set +e
          cd ${PARENT_RUN_DIR}/spark-*
          ./bin/spark-submit --deploy-mode cluster --master "${SPARK_CLUSTER_URL}" --class "${SPARK_APP_CLASS}" "${SPARK_APP_JAR}" 2> result.txt

          if [ $? -ne 0 ]; then
            echo "An error occurred when running spark-submit, please check the parameters:"
            echo "Class: ${SPARK_APP_CLASS}"
            echo "Jar: ${SPARK_APP_JAR}"
            exit 1
          else
            cat result.txt |grep submissionId | awk '{print $3}' | tr -d '",' > ${RUN_DIR}/submissionId
          fi

        # Do not inherit!
        checkRunning.command: true
        customize.command:    true
        install.command:      true
        post.launch.command:  true
        postCustomizeCommand: true
        postInstallCommand:   true
        postLaunchCommand:    true
        preCustomizeCommand:  true
        preInstallCommand:    true
        preLaunchCommand:     true
        stop.command:         true
        preInstallTemplates:  {}

  # define a template to make it easily accessible in the UI
  - id: spark-cluster-template
    version: 0.2.1-SNAPSHOT
    iconUrl: *sparkIconUrl
    license: Apache-2.0
    name: Spark Cluster
    description: A configurable Apache Spark cluster
    itemType: template
    item:
      name: My Spark Cluster

      services:
      - type: spark-cluster-entity
        brooklyn.config:
          cluster.initial.size: $brooklyn:config("spark.initial.size")

      brooklyn.parameters:
        - name: spark.initial.size
          label: "Spark Cluster Size"
          type: integer
          default: 3
        - *sparkDownloadUrl

      ## REQUIRED - the location to deploy to
      #location:
      #  jclouds:aws-ec2:eu-central-1:
      #    identity: TODO-YOUR-CLOUD-ID
      #    credential: TODO-YOUR-CLOUD-CREDENTIAL

